experiment_params:
#  dataset_root: &dataset_root "/storage/datasets/celeba_hq_256"
#  path: &path "/storage/experiments"
  path: &path "/data/shared/svc/experiments"
#  dataset_root: &dataset_root "/data/shared/svc/datasets/celeba_hq_256"
  dataset_root: &dataset_root "/data/shared/svc/datasets/vimeo90k/vimeo_septuplet"
  dataloader_workers: &dataloader_workers 12
  image_resolution: &image_resolution (256, 256)

  gpu: &gpu 0

  lr: &lr 3e-4
  epochs: &epochs 1000
  batch_size: &batch_size 64

  n_residual_blocks: &n_residual_blocks 3
  code_book_dim: &code_book_dim 64
  code_book_size: &code_book_size 512

  ema_decay: &vq_ema_decay 0.99
  commit_weight: &commit_weight 0.25

  lmbda: &lmbda 1


### Trainer
trainer: !Trainer
  deterministic: False
  benchmark: True
  gpus: `[gpu]`
  max_epochs: *epochs
  logger: !NeptuneLogger
    project: timeescaper/vq-vic
    log_model_checkpoints: True
    tags:
      - "vq2"
      - "vimeo"
  callbacks:
    - !ModelCheckpoint
      save_top_k: 1
      save_last: True
      every_n_epochs: 1
  check_val_every_n_epoch: 5
  log_every_n_steps: 1


### Datasets
train_dataset: &train_dataset !VimeoImagesDataset
  sequences_root: `f"{dataset_root}/sequences"`
  subset_list: `f"{dataset_root}/sep_trainlist.txt"`
  segment: (0, 3500)
  transform: !Compose
    transforms:
      - !CenterCrop
        size: *image_resolution
      - !ToTensor

val_dataset: &val_dataset !VimeoImagesDataset
  sequences_root: `f"{dataset_root}/sequences"`
  subset_list: `f"{dataset_root}/sep_testlist.txt"`
  segment: (0, 500)
  transform: !Compose
    transforms:
      - !CenterCrop
        size: *image_resolution
      - !ToTensor

train_dataloader: !DataLoader
  dataset: *train_dataset
  batch_size: *batch_size
  shuffle: true
  num_workers: *dataloader_workers

val_dataloader: !DataLoader
  dataset: *val_dataset
  batch_size: *batch_size
  shuffle: false
  num_workers: *dataloader_workers


# Model
encoder_bottom: &encoder_bottom !ConvEncoder
  channels: (64, 128)
  n_residual_blocks: *n_residual_blocks

encoder_top: &encoder_top !ConvEncoder
  channels: (128,)
  in_channels: 128
  n_residual_blocks: *n_residual_blocks

decoder_top: &decoder_top !ConvDecoder
  channels: `(code_book_dim,)`
  out_channels: *code_book_dim
  n_residual_blocks: *n_residual_blocks

decoder_bottom: &decoder_bottom !ConvDecoder
  channels: `(code_book_dim * 2, 64)`
  n_residual_blocks: *n_residual_blocks

ae_model: &ae_model !VectorQuantizedAE2
  encoder_bottom: *encoder_bottom
  decoder_bottom: *decoder_bottom
  encoder_top: *encoder_top
  decoder_top: *decoder_top
  code_book_dim: *code_book_dim
  code_book_size: *code_book_size
  decay: *vq_ema_decay

model: &model !VQVAE2CompressionModel
  vq_ae: *ae_model


### Lightning Module
pl_module: !LitAutoEncoderModule
  model: *model
  optimizer: !Adam
    lr: *lr
    params: `model.get_params()`
  loss: !RateDistortionLoss
    lmbda: *lmbda
    commit_weight: *commit_weight
  sample_train: `train_dataset[0]`
  sample_val: `val_dataset[0]`
